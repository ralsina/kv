<!DOCTYPE html>
<html data-theme="dark">
<head>
    <title>KVM Stream</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="manifest" href="/manifest.json">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.min.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Oxanium:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/style.css">
    <script src="/common.js"></script>
    <script>
      // Redirect mobile devices to /mobile
      if (/Mobi|Android|iPhone|iPad|iPod|Opera Mini|IEMobile|Mobile/i.test(navigator.userAgent)) {
        if (!location.pathname.startsWith('/mobile')) {
          location.replace('/mobile');
        }
      }
    </script>
</head>
<body>
    <aside id="sidebar" class="sidebar collapsed" role="complementary" aria-label="Controls">
        <button id="sidebar-toggle" class="sidebar-toggle" title="Toggle Controls" aria-label="Toggle sidebar" type="button">‹</button>
        <div class="sidebar-content">
            <h2><span class="material-icons">tune</span> Controls</h2>
            <details id="section-text" open><summary><span class="material-icons">text_fields</span> Text Input</summary>
                <div class="compact-section">
                    <form id="text-input-form" style="display: flex; gap: 0.5rem;" onsubmit="event.preventDefault(); sendText();">
                        <input type="text" id="text-input" placeholder="Type text to send..." maxlength="200">
                        <button type="submit" style="width: auto;">Send</button>
                    </form>
                    <div style="margin-top: 0.5rem;">
                        <button onclick="pasteFromClipboard()" class="outline" style="width: 100%;"><span class="material-icons">content_paste</span> Paste Clipboard</button>
                    </div>
                </div>
            </details>

            <details id="section-quickkeys"><summary><span class="material-icons">keyboard_alt</span> Quick Keys</summary>
                <div class="compact-section">
                    <div class="key-grid">
                        <button onclick="sendKey('enter')" class="outline">Enter</button>
                        <button onclick="sendKey('tab')" class="outline">Tab</button>
                        <button onclick="sendKey('escape')" class="outline">Esc</button>
                        <button onclick="sendKey('backspace')" class="outline">⌫</button>
                        <button onclick="sendKey('delete')" class="outline">Del</button>
                        <button onclick="sendKey('space')" class="outline">Space</button>
                    </div>
                </div>
            </details>

            <details id="section-shortcuts"><summary><span class="material-icons">shortcut</span> Shortcuts</summary>
                <div class="compact-section">
                    <div class="combo-grid">
                        <button onclick="sendCombination(['ctrl'], ['c'])" class="outline">Ctrl+C</button>
                        <button onclick="sendCombination(['ctrl'], ['v'])" class="outline">Ctrl+V</button>
                        <button onclick="sendCombination(['ctrl'], ['x'])" class="outline">Ctrl+X</button>
                        <button onclick="sendCombination(['ctrl'], ['z'])" class="outline">Ctrl+Z</button>
                        <button onclick="sendCombination(['ctrl'], ['a'])" class="outline">Ctrl+A</button>
                        <button onclick="sendCombination(['alt'], ['tab'])" class="outline">Alt+Tab</button>
                        <button onclick="pasteFromClipboard()" class="outline" title="Paste from your clipboard"><span class="material-icons" style="font-size: 0.8em;">content_paste</span> Paste</button>
                    </div>
                </div>
            </details>

            <details id="section-mouse"><summary><span class="material-icons">mouse</span> Mouse Buttons</summary>
                <div class="compact-section">
                    <div class="key-grid">
                        <button onclick="sendMouseClick('left')" class="outline">L Click</button>
                        <button onclick="sendMouseClick('right')" class="outline">R Click</button>
                        <button onclick="sendMouseClick('middle')" class="outline">M Click</button>
                    </div>
                </div>
            </details>

            <details id="section-video"><summary><span class="material-icons">videocam</span> Video Controls</summary>
                <div class="compact-section">
                    <div style="font-size: 0.85rem; margin-bottom: 0.5rem;">
                        <p><span class="material-icons" style="font-size: 0.9em;">fullscreen</span> <strong>Fullscreen:</strong> F11 or Ctrl+F</p>
                        <p><span class="material-icons" style="font-size: 0.9em;">photo_camera</span> <strong>Screenshot:</strong> Ctrl+S or Alt+S</p>
                        <p><span class="material-icons" style="font-size: 0.9em;">mouse</span> <strong>Input Capture:</strong> Click on video</p>
                        <p><span class="material-icons" style="font-size: 0.9em;">logout</span> <strong>Release Input:</strong> ESC key</p>
                    </div>
                </div>
            </details>

            <details id="section-usb" style="display: none;"><summary><span class="material-icons">usb</span> Virtual USB Drive</summary>
                <div class="compact-section">
                    <div id="usb-image-list" style="max-height: 150px; overflow-y: auto; background: rgba(0,0,0,0.1); padding: 0.5rem; border-radius: var(--pico-border-radius); font-family: monospace; font-size: 0.9rem;">
                        Loading disk images...
                    </div>
                    <div style="margin-top: 0.5rem;">
                        <button id="detach-usb-btn" class="outline" style="display:none;"><span class="material-icons">eject</span> Detach</button>
                    </div>
                    <form id="usb-upload-form" style="margin-top:0.5rem;display:flex;gap:0.5em;align-items:center;" onsubmit="event.preventDefault(); uploadUsbImage();">
                        <input type="file" id="usb-upload-input" accept=".img,.iso,.bin,.raw,.qcow2,.vhd,.vmdk,.dmg,.img.gz,.img.xz,.img.bz2,.zip,.gz,.xz,.bz2" style="display:none;" required>
                        <button type="button" id="usb-upload-btn" class="outline"><span class="material-icons">upload</span> Upload</button>
                        <progress id="usb-upload-progress" value="0" max="100" style="width:80px;display:none;margin-left:0.5em;"></progress>
                    </form>
                    <div id="usb-upload-status" style="font-size:0.85em;color:#4ade80;margin-top:0.2em;"></div>
                </div>
            </details>

            <div id="ethernet-control" style="margin-bottom:1em; display: none;">
                <label style="display:flex;align-items:center;gap:0.5em;">
                    <span class="material-icons" id="ethernet-status-icon">cable</span>
                    <span id="ethernet-status-label" style="min-width:4em;">Checking...</span>
                    <input type="checkbox" id="ethernet-switch" name="ethernet-switch" role="switch" class="switch" onchange="setEthernet(this.checked)">
                </label>
                <div id="ethernet-ifname" style="margin-top:0.3rem; font-size:0.85em; color:#aaa;"></div>
            </div>
            <label style="display:flex;align-items:center;gap:0.5em;margin-bottom:0;">
                <span class="material-icons" style="font-size: 1.2em;">light_mode</span>
                <input type="checkbox" id="theme-switch" name="theme-switch" role="switch" class="switch">
                <span class="material-icons" style="font-size: 1.2em;">dark_mode</span>
            </label>
        </div>
    </aside>
    <!-- Statusbar (restored) -->
    <div class="video-status-bar" id="video-status-bar">
        <span id="latency-indicator"><span class="material-icons">speed</span>--ms</span>
        <span id="fps-indicator"><span class="material-icons">timer</span>FPS:--</span>
        <span id="video-status"><span class="material-icons">monitor</span>Video:--</span>
        <span id="keyboard-status"><span class="material-icons">keyboard</span></span>
        <span id="mouse-status"><span class="material-icons">mouse</span></span>
        <span id="storage-status"><span class="material-icons">usb</span></span>
        <span id="ethernet-status-bar"><span class="material-icons">cable</span></span>
        <span id="input-status"></span>
        <span id="controls-hint" style="display:none;" class="good"><span class="material-icons">tips_and_updates</span>Tip: Hover over video for controls</span>
    </div>
    <main id="main-container" class="container-fluid" role="main">
        <!-- Header -->
        <header>
            <h1><span class="material-icons">desktop_windows</span> Remote KVM</h1>
            <div class="header-controls">
            </div>
        </header>

        <!-- Video Stream -->
        <section class="video-section">
            
            <div class="video-container">
                <img id="video-stream" class="video-stream" src="/video.mjpg"
                     alt="Live KVM Video Stream"
                     tabindex="0"
                     title="Click to capture mouse and keyboard input"
                     onload="if(document.getElementById('no-video')){this.style.display='block';document.getElementById('no-video').style.display='none';}"
                     onerror="if(document.getElementById('no-video')){this.style.display='none';document.getElementById('no-video').style.display='block';}"
                     crossorigin="anonymous" role="img" aria-live="polite">
                <div class="video-controls">
                    <button id="audio-btn" class="video-control-btn" onclick="toggleAudio()" title="Toggle Audio">
                        <span class="material-icons">volume_up</span>
                    </button>
                    <button id="fullscreen-btn" class="video-control-btn" onclick="toggleFullscreen()" title="Toggle Fullscreen">
                        <span class="material-icons">fullscreen</span>
                    </button>
                    <button id="screenshot-btn" class="video-control-btn" onclick="takeScreenshot()" title="Take Screenshot">
                        <span class="material-icons">photo_camera</span>
                    </button>
                    <button id="video-quality-btn" class="video-control-btn" title="Video Quality" style="position:relative;">
                        <span class="material-icons">settings</span>
                    </button>
                    <div id="video-quality-menu" class="video-quality-menu">
                        <ul id="video-quality-list"></ul>
                    </div>
                </div>
            </div>
            <div id="no-video" class="no-video" role="status">
                <img src="/no-video-placeholder.svg" alt="No video device available" style="max-width: 100%; height: auto; max-height: 360px;">
            </div>
        </section>

        <!-- Info -->
        <footer>
            <small>
                <strong>KV:</strong> A remote KVM | <a href="https://github.com/ralsina/kv" target="_blank" rel="noopener noreferrer" style="color: var(--pico-color-azure-400); text-decoration: none;">Source Code</a>
            </small>
        </footer>
    </main>

    <link rel="stylesheet" href="/video_quality_menu.css">
    <script src="/script.js" defer></script>
    <script>
        const setTheme = (theme) => {
            const html = document.querySelector("html");
            html.dataset.theme = theme;
        };

        document.addEventListener("DOMContentLoaded", () => {
            const switchers = document.querySelectorAll("[data-theme-switcher]");

            switchers.forEach(switcher => {
                switcher.addEventListener("click", (event) => {
                    event.preventDefault();
                    const theme = event.target.dataset.themeSwitcher;
                    setTheme(theme);
                    localStorage.setItem("theme", theme);
                });
            });

            const savedTheme = localStorage.getItem("theme");
            if (savedTheme) {
                setTheme(savedTheme);
            }
        });
    </script>
</body>
</html>
